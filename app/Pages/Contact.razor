@using System.ComponentModel.DataAnnotations;
@inject IJSRuntime _jsRuntime
@inject HttpClient Http
@page "/signup"

<h3 class="display-4">let's connect</h3>
<p class="lead">
    Sign up to get notified of new content as it's released. Always free, always top-notch. Rest assured knowing I'll keep your data tight and on lock.
</p>
    @* https://blazor-university.com/forms/handling-form-submission/ *@
        <EditForm Model="@contact" OnValidSubmit="@ValidFormSubmitted">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group row">
                <div class="col-sm-6 offset-sm-2">
                <InputText class="form-control" label="FirsName" id="FirstName" placeholder="John" @bind-Value="contact.FirstName" />
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-6 offset-sm-2">
                <InputText class="form-control" id="LastName" placeholder="Doe" @bind-Value="contact.LastName" />
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-6 offset-sm-2">
                <InputText class="form-control" id="Email" placeholder="John.Doe@gmail.com" @bind-Value="contact.Email" />
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-6 offset-sm-2">
                <InputText class="form-control" id="Phone" placeholder="222-333-4455" @bind-Value="contact.PhoneNumber" />
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-6 offset-sm-2">
                <InputTextArea class="form-control" id="Message" name="Message" placeholder="Share some love" @bind-Value="contact.Message" />
                </div>
            </div>
            @if (Loading == false || FormResult != "")
            {
                <div class="form-group row">
                    <div class="col-sm-6 offset-sm-2">
                        <button class="btn btn-primary">Sign Up</button>
                    </div>  
                </div>
            }
            else{
                <div class="form-group row">
                    <div class="col-sm-6 offset-sm-2">
                        <LoadingButton Title="Sending"/>   
                    </div>  
                </div>     
            }
        </EditForm>

@if (FormResult == "true")
{
    Loading = false;
    FormResult = "";
    <br />
    <div class="alert alert-success" role="alert">
    <strong>Thank you.</strong> I'll be in touch soon.
    </div>
    OnEventAdded.Invoke();
}
@if((FormResult == "false"))
{
    Loading = false;
    FormResult = "";
    <br />
    <div class="alert alert-danger" role="alert">
    <strong>Oh no!</strong> Our records indicate @contact.Email is already registered.
    </div>
    OnEventAdded.Invoke();

}

@code{

    public ContactModel contact = new ContactModel();
    public string FormResult = "";
    public bool Loading = false;

    // Configure event that other pages and components can subscribe to not being used
    public static event Action OnEventAdded = () => { };
    
    // Removes loading animation from dom
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await _jsRuntime.InvokeVoidAsync("removeloader");
        await _jsRuntime.InvokeVoidAsync("Prism.highlightAll");
    }

    // Return Task for view to update
    protected async Task ValidFormSubmitted(EditContext editContext)
    {
        Loading = true;
        ContactModel C = (ContactModel)editContext.Model;
        string url = "https://qt9yfmkihi.execute-api.us-east-1.amazonaws.com/prod/contacts";
        HttpResponseMessage response = await Http.PostAsJsonAsync(url, C);
        FormResult = await response.Content.ReadAsStringAsync();

    }
    public class ContactModel
    {
        [Required] 
        public string FirstName { get; set; }
        [Required] 
        public string LastName { get; set; }
        [Required]
        [EmailAddress] 
        public string Email { get; set; }
        [Required]
        [Phone] 
        public string PhoneNumber { get; set; }
        public string Message { get; set; }
        
    }
}